apply from: "${project.projectDir}/../div-tests-coverage.gradle"
apply plugin: 'kotlin-android'

android {
    defaultConfig {
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    testOptions {
        unitTests {
            all {
                jacoco {
                    includeNoLocationClasses = true
                    excludes = ['jdk.internal.*']
                }

                jvmArgs '-noverify'

                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }

                // Keep it synced with DivKitGlobalConfigProvider.
                systemProperty 'robolectric.looperMode', "LEGACY"
            }
            includeAndroidResources = true
        }
    }
}

dependencies {
    testImplementation project(path: ':unit-test-common')
    testImplementation "androidx.test:core:$versions.androidx.test"
    testImplementation("junit:junit:$versions.junit") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }
    testImplementation "org.hamcrest:hamcrest-junit:$versions.hamcrestJUnit"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$versions.mockitoKotlin"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"
    testImplementation "org.easytesting:fest-reflect:$versions.festReflect"
    testImplementation("com.squareup:fest-android:$versions.festAndroid") {
        exclude module: "support-v4"
    }
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
}
